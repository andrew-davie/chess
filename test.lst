------- FILE vox_test.asm LEVEL 1 PASS 2
      1  10000 ????						;
      2  10000 ????						; vox_test.asm
      3  10000 ????						;
      4  10000 ????						;
      5  10000 ????						; By Alex Herbert, 2004
      6  10000 ????						;
      7  10000 ????
      8  10000 ????
      9  10000 ????
     10  10000 ????				       processor	6502
     11  10000 ????
     12  10000 ????
     13  10000 ????
     14  10000 ????						; TIA Registers (Write)
     15  10000 ????		00 00	    VSYNC      equ	$00
     16  10000 ????		00 01	    VBLANK     equ	$01
     17  10000 ????		00 02	    WSYNC      equ	$02
     18  10000 ????		00 03	    RSYNC      equ	$03
     19  10000 ????		00 04	    NUSIZ0     equ	$04
     20  10000 ????		00 05	    NUSIZ1     equ	$05
     21  10000 ????		00 06	    COLUP0     equ	$06
     22  10000 ????		00 07	    COLUP1     equ	$07
     23  10000 ????		00 08	    COLUPF     equ	$08
     24  10000 ????		00 09	    COLUBK     equ	$09
     25  10000 ????		00 0a	    CTRLPF     equ	$0a
     26  10000 ????		00 0b	    REFP0      equ	$0b
     27  10000 ????		00 0c	    REFP1      equ	$0c
     28  10000 ????		00 0d	    PF0        equ	$0d
     29  10000 ????		00 0e	    PF1        equ	$0e
     30  10000 ????		00 0f	    PF2        equ	$0f
     31  10000 ????		00 10	    RESP0      equ	$10
     32  10000 ????		00 11	    RESP1      equ	$11
     33  10000 ????		00 12	    RESM0      equ	$12
     34  10000 ????		00 13	    RESM1      equ	$13
     35  10000 ????		00 14	    RESBL      equ	$14
     36  10000 ????		00 15	    AUDC0      equ	$15
     37  10000 ????		00 16	    AUDC1      equ	$16
     38  10000 ????		00 17	    AUDF0      equ	$17
     39  10000 ????		00 18	    AUDF1      equ	$18
     40  10000 ????		00 19	    AUDV0      equ	$19
     41  10000 ????		00 1a	    AUDV1      equ	$1a
     42  10000 ????		00 1b	    GRP0       equ	$1b
     43  10000 ????		00 1c	    GRP1       equ	$1c
     44  10000 ????		00 1d	    ENAM0      equ	$1d
     45  10000 ????		00 1e	    ENAM1      equ	$1e
     46  10000 ????		00 1f	    ENABL      equ	$1f
     47  10000 ????		00 20	    HMP0       equ	$20
     48  10000 ????		00 21	    HMP1       equ	$21
     49  10000 ????		00 22	    HMM0       equ	$22
     50  10000 ????		00 23	    HMM1       equ	$23
     51  10000 ????		00 24	    HMBL       equ	$24
     52  10000 ????		00 25	    VDELP0     equ	$25
     53  10000 ????		00 26	    VDELP1     equ	$26
     54  10000 ????		00 27	    VDELBL     equ	$27
     55  10000 ????		00 28	    RESMP0     equ	$28
     56  10000 ????		00 29	    RESMP1     equ	$29
     57  10000 ????		00 2a	    HMOVE      equ	$2a
     58  10000 ????		00 2b	    HMCLR      equ	$2b
     59  10000 ????		00 2c	    CXCLR      equ	$2c
     60  10000 ????
     61  10000 ????
     62  10000 ????						; TIA Registers (Read)
     63  10000 ????		00 00	    CXM0P      equ	$00
     64  10000 ????		00 01	    CXM1P      equ	$01
     65  10000 ????		00 02	    CXP0FB     equ	$02
     66  10000 ????		00 03	    CXP1FB     equ	$03
     67  10000 ????		00 04	    CXM0FB     equ	$04
     68  10000 ????		00 05	    CXM1FB     equ	$05
     69  10000 ????		00 06	    CXBLPF     equ	$06
     70  10000 ????		00 07	    CXPPMM     equ	$07
     71  10000 ????		00 08	    INPT0      equ	$08
     72  10000 ????		00 09	    INPT1      equ	$09
     73  10000 ????		00 0a	    INPT2      equ	$0a
     74  10000 ????		00 0b	    INPT3      equ	$0b
     75  10000 ????		00 0c	    INPT4      equ	$0c
     76  10000 ????		00 0d	    INPT5      equ	$0d
     77  10000 ????
     78  10000 ????
     79  10000 ????						; RIOT Registers
     80  10000 ????		02 80	    SWCHA      equ	$0280
     81  10000 ????		02 81	    SWACNT     equ	$0281
     82  10000 ????
     83  10000 ????		02 82	    SWCHB      equ	$0282
     84  10000 ????		02 83	    SWBCNT     equ	$0283
     85  10000 ????
     86  10000 ????		02 84	    INTIM      equ	$0284
     87  10000 ????		02 85	    TIMINT     equ	$0285
     88  10000 ????
     89  10000 ????		02 94	    TIM1T      equ	$0294
     90  10000 ????		02 95	    TIM8T      equ	$0295
     91  10000 ????		02 96	    TIM64T     equ	$0296
     92  10000 ????		02 97	    T1024T     equ	$0297
     93  10000 ????
     94  10000 ????
     95  10000 ????
     96  10000 ????
     97  10000 ????						; Speakjet Driver
     98  10000 ????
------- FILE speakjet.inc LEVEL 2 PASS 2
      0  10000 ????				       include	"speakjet.inc"
      1  10000 ????						;
      2  10000 ????						; speakjet.inc
      3  10000 ????						;
      4  10000 ????						;
      5  10000 ????						; AtariVox Speech Synth Driver
      6  10000 ????						;
      7  10000 ????						; By Alex Herbert, 2004
      8  10000 ????						;
      9  10000 ????
     10  10000 ????
     11  10000 ????
     12  10000 ????
     13  10000 ????						; Constants
     14  10000 ????
     15  10000 ????
     16  10000 ????		00 01	    SERIAL_OUTMASK equ	$01
     17  10000 ????		00 02	    SERIAL_RDYMASK equ	$02
     18  10000 ????
     19  10000 ????
     20  10000 ????
     21  10000 ????						; Macros
     22  10000 ????
     23  10000 ????				       mac	spkout
     24  10000 ????
     25  10000 ????						; check buffer-full status
     26  10000 ????				       lda	SWCHA
     27  10000 ????				       and	#SERIAL_RDYMASK
     28  10000 ????				       beq	.speech_done
     29  10000 ????
     30  10000 ????						; get next speech byte
     31  10000 ????				       ldy	#$00
     32  10000 ????				       lda	(speech_addr),y
     33  10000 ????
     34  10000 ????						; invert data and check for end of string
     35  10000 ????				       eor	#$ff
     36  10000 ????				       beq	.speech_done
     37  10000 ????				       sta	{1}
     38  10000 ????
     39  10000 ????						; increment speech pointer
     40  10000 ????				       inc	speech_addr
     41  10000 ????				       bne	.incaddr_skip
     42  10000 ????				       inc	speech_addr+1
     43  10000 ????			    .incaddr_skip
     44  10000 ????
     45  10000 ????						; output byte as serial data
     46  10000 ????
     47  10000 ????				       sec		; start bit
     48  10000 ????			    .byteout_loop
     49  10000 ????						; put carry flag into bit 0 of SWACNT, perserving other bits
     50  10000 ????				       lda	SWACNT	; 4
     51  10000 ????				       and	#$fe	; 2 6
     52  10000 ????				       adc	#$00	; 2 8
     53  10000 ????				       sta	SWACNT	; 4 12
     54  10000 ????
     55  10000 ????						; 10 bits sent? (1 start bit, 8 data bits, 1 stop bit)
     56  10000 ????				       cpy	#$09	; 2 14
     57  10000 ????				       beq	.speech_done	; 2 16
     58  10000 ????				       iny		; 2 18
     59  10000 ????
     60  10000 ????						; waste some cycles
     61  10000 ????				       ldx	#$07
     62  10000 ????			    .delay_loop
     63  10000 ????				       dex
     64  10000 ????				       bne	.delay_loop	; 36 54
     65  10000 ????
     66  10000 ????						; shift next data bit into carry
     67  10000 ????				       lsr	{1}	; 5 59
     68  10000 ????
     69  10000 ????						; and loop (branch always taken)
     70  10000 ????				       bpl	.byteout_loop	; 3 62 cycles for loop
     71  10000 ????
     72  10000 ????			    .speech_done
     73  10000 ????
     74  10000 ????				       IF	>.byteout_loop != >.
     75  10000 ????				       ECHO	"loop X"
     76  10000 ????				       ERR
     77  10000 ????				       ENDIF
     78  10000 ????
     79  10000 ????
     80  10000 ????
     81  10000 ????				       endm
     82  10000 ????
     83  10000 ????
     84  10000 ????				       mac	speak
     85  10000 ????
     86  10000 ????				       lda	#<{1}
     87  10000 ????				       sta	speech_addr
     88  10000 ????				       lda	#>{1}
     89  10000 ????				       sta	speech_addr+1
     90  10000 ????
     91  10000 ????				       endm
     92  10000 ????
     93  10000 ????
     94  10000 ????
------- FILE vox_test.asm
    100  10000 ????
    101  10000 ????
    102  10000 ????
    103  10000 ????
    104  10000 ????						; Macros
    105  10000 ????
    106  10000 ????				       mac	wait_timint
    107  10000 ????			    .1	       bit	TIMINT
    108  10000 ????				       bpl	.1
    109  10000 ????				       sta	WSYNC
    110  10000 ????				       endm
    111  10000 ????
    112  10000 ????
    113  10000 ????
    114  10000 ????				       mac	wait_hbls
    115  10000 ????				       ldx	{1}
    116  10000 ????			    .1	       dex
    117  10000 ????				       sta	WSYNC
    118  10000 ????				       bne	.1
    119  10000 ????				       endm
    120  10000 ????
    121  10000 ????
    122  10000 ????
    123  10000 ????
    124  10000 ????						; Variables
    125  10000 ????
    126 U0086 ????				      seg.u	bss
    127 U0080					      org	$0080
    128 U0080
    129 U0080
    130 U0080		       00	   frame      ds	1
    131 U0081		       00	   temp       ds	1
    132 U0082		       00	   switch_states ds	1
    133 U0083		       00	   switch_edges ds	1
    134 U0084
    135 U0084		       00 00	   speech_addr ds	2
    136 U0086
    137 U0086
    138 U0086
    139 U0086
    140 U0086							; Code/Data
    141 U0086
    142  10000 ????				       seg	code
    143  f000					      org	$f000,$ff
    144  f000
    145  f000
    146  f000							;ds 1*1024
    147  f000
    148  f000							; Speech Data
    149  f000
    150  f000				   fire_speech
    151  f000		       1f fd		      dc.b	31,253
    152  f002		       ff		      dc.b	$ff
    153  f003
    154  f003				   up_speech
    155  f003		       1f bf 83 08*	      dc.b	31,191,131,8,187,191,129,143,2,2
    156  f00d		       bf 83 08 bb*	      dc.b	191,131,8,187,191,129,143,2,2
    157  f016		       93 0e 88 08*	      dc.b	147,14,136,8,141,8,191,162,8,190,148,8,128,31
    158  f024		       ff		      dc.b	$ff
    159  f025				   down_speech
    160  f025		       1f 16 6e 17*	      dc.b	31,22,110,23,1,215,6
    161  f02c		       ae 9a 07 8d*	      dc.b	174,154,7,141,7,165,7,151,6,215,6
    162  f037		       ae 9a 07 8d*	      dc.b	174,154,7,141,7,165,7,151,6,215,6
    163  f042		       ae 9a 07 8d*	      dc.b	174,154,7,141,7,165,7,151,31
    164  f04b		       ff		      dc.b	$ff
    165  f04c				   left_speech
    166  f04c		       1f 15 74 17*	      dc.b	31,21,116,23,4,22,55,182,129,194,131,141
    167  f058		       02 02 08 ba*	      dc.b	2,2,8,186,7,155,4,191,6,145,7,136,7,155,196,6
    168  f068		       9a 80 06 94*	      dc.b	154,128,6,148,7,137,7,164,18,171,136,191,31
    169  f075		       ff		      dc.b	$ff
    170  f076				   right_speech
    171  f076		       1f 15 7f aa*	      dc.b	31,21,127,170,128,174,128,170,128,174,128
    172  f081		       aa 80 ae 80*	      dc.b	170,128,174,128,170,128,174,128,170,128,174,128,31
    173  f08e		       ff		      dc.b	$ff
    174  f08f
    175  f08f				   silence_speech
    176  f08f		       1f		      dc.b	31
    177  f090		       ff		      dc.b	$ff
    178  f091
    179  f091
    180  f091
    181  f091							; Boot Code
    182  f091
    183  f091				   boot
    184  f091		       78		      sei
    185  f092		       d8		      cld
    186  f093
    187  f093		       a2 ff		      ldx	#$ff
    188  f095		       9a		      txs
    189  f096
    190  f096		       e8		      inx
    191  f097		       8a		      txa
    192  f098				   boot_loop
    193  f098		       48		      pha
    194  f099		       ca		      dex
    195  f09a		       d0 fc		      bne	boot_loop
    196  f09c
      0  f09c					      SPEAK	silence_speech
      1  f09c
      2  f09c		       a9 8f		      lda	#<silence_speech
      3  f09e		       85 84		      sta	speech_addr
      4  f0a0		       a9 f0		      lda	#>silence_speech
      5  f0a2		       85 85		      sta	speech_addr+1
      6  f0a4
    198  f0a4
    199  f0a4
    200  f0a4							; Display Loop
    201  f0a4
    202  f0a4				   vertical_sync
    203  f0a4		       a9 02		      lda	#$02
    204  f0a6		       85 02		      sta	WSYNC
    205  f0a8		       85 00		      sta	VSYNC
    206  f0aa
    207  f0aa		       a2 ff		      ldx	#$ff
    208  f0ac		       9a		      txs
    209  f0ad
    210  f0ad		       e6 80		      inc	frame
    211  f0af
    212  f0af		       85 02		      sta	WSYNC
    213  f0b1
    214  f0b1		       a9 2a		      lda	#(36*76)>>6
    215  f0b3		       85 02		      sta	WSYNC
    216  f0b5		       8d 96 02 	      sta	TIM64T
    217  f0b8
    218  f0b8		       a9 00		      lda	#$00
    219  f0ba		       85 02		      sta	WSYNC
    220  f0bc		       85 00		      sta	VSYNC
    221  f0be
    222  f0be
    223  f0be				   vblank_start
    224  f0be		       20 a9 f1 	      jsr	read_switches
    225  f0c1
    226  f0c1		       20 cc f1 	      jsr	speech_select
    227  f0c4
    228  f0c4
    229  f0c4		       a9 03		      lda	#$03
    230  f0c6		       85 02		      sta	WSYNC
    231  f0c8		       85 04		      sta	NUSIZ0	; 3
    232  f0ca		       85 05		      sta	NUSIZ1	; 3 6
    233  f0cc		       a2 01		      ldx	#$01	; 2 8
    234  f0ce		       86 25		      stx	VDELP0	; 3 11
    235  f0d0		       86 26		      stx	VDELP1	; 3 14
    236  f0d2		       86 0a		      stx	CTRLPF	; 3 17
    237  f0d4		       ca		      dex		; 2 19
    238  f0d5		       86 1b		      stx	GRP0	; 3 22
    239  f0d7		       86 1c		      stx	GRP1	; 3 25
    240  f0d9		       86 1b		      stx	GRP0	; 3 28
    241  f0db
    242  f0db		       a9 40		      lda	#$40	; 2 30
    243  f0dd		       85 20		      sta	HMP0	; 3 33
    244  f0df		       a9 50		      lda	#$50	; 2 35
    245  f0e1		       85 21		      sta	HMP1	; 3 37
    246  f0e3
    247  f0e3		       85 10		      sta	RESP0	; 3 40
    248  f0e5		       85 11		      sta	RESP1	; 3 43
    249  f0e7
    250  f0e7		       a9 04		      lda	#$04
    251  f0e9		       85 09		      sta	COLUBK
    252  f0eb
    253  f0eb		       a9 28		      lda	#$28
    254  f0ed		       85 06		      sta	COLUP0
    255  f0ef		       85 07		      sta	COLUP1
    256  f0f1
    257  f0f1		       85 02		      sta	WSYNC
    258  f0f3		       85 2a		      sta	HMOVE
    259  f0f5
    260  f0f5
      0  f0f5					      WAIT_TIMINT
      1  f0f5		       2c 85 02    .1	      bit	TIMINT
      2  f0f8		       10 fb		      bpl	.1
      3  f0fa		       85 02		      sta	WSYNC
    262  f0fc
    263  f0fc
    264  f0fc				   display_start
    265  f0fc		       a9 00		      lda	#$00
    266  f0fe		       85 02		      sta	WSYNC
    267  f100		       85 01		      sta	VBLANK
    268  f102
    269  f102		       a9 e2		      lda	#(191*76)>>6
    270  f104		       8d 96 02 	      sta	TIM64T
    271  f107
    272  f107
      0  f107					      WAIT_HBLS	#$40
      1  f107		       a2 40		      ldx	#$40
      2  f109		       ca	   .1	      dex
      3  f10a		       85 02		      sta	WSYNC
      4  f10c		       d0 fb		      bne	.1
    274  f10e
    275  f10e
    276  f10e		       a9 fe		      lda	#$fe
    277  f110		       85 02		      sta	WSYNC
    278  f112		       85 0f		      sta	PF2
    279  f114		       85 02		      sta	WSYNC
    280  f116		       85 02		      sta	WSYNC
    281  f118		       85 02		      sta	WSYNC
    282  f11a
    283  f11a		       a2 10		      ldx	#$10
    284  f11c				   title_loop
    285  f11c		       ca		      dex
    286  f11d		       85 02		      sta	WSYNC
    287  f11f
    288  f11f		       bd 00 f3 	      lda	title_sprite0,x	; 4
    289  f122		       85 1b		      sta	GRP0	; 3
    290  f124		       bd 10 f3 	      lda	title_sprite1,x	; 4
    291  f127		       85 1c		      sta	GRP1	; 3
    292  f129		       bd 20 f3 	      lda	title_sprite2,x	; 4
    293  f12c		       85 1b		      sta	GRP0	; 3 21
    294  f12e
    295  f12e		       bc 30 f3 	      ldy	title_sprite3,x	; 4
    296  f131		       bd 40 f3 	      lda	title_sprite4,x	; 4
    297  f134		       85 81		      sta	temp	; 3
    298  f136		       bd 50 f3 	      lda	title_sprite5,x	; 4 36
    299  f139
    300  f139		       9a		      txs		; 2
    301  f13a		       a6 81		      ldx	temp	; 3 41
    302  f13c
    303  f13c		       84 1c		      sty	GRP1	; 3 44
    304  f13e		       86 1b		      stx	GRP0	; 3 47
    305  f140		       85 1c		      sta	GRP1	; 3 50
    306  f142		       85 1b		      sta	GRP0	; 3 53
    307  f144
    308  f144		       a9 00		      lda	#$00
    309  f146		       85 02		      sta	WSYNC
    310  f148		       85 1c		      sta	GRP1
    311  f14a		       85 1b		      sta	GRP0
    312  f14c		       85 1c		      sta	GRP1
    313  f14e
    314  f14e		       ba		      tsx
    315  f14f		       d0 cb		      bne	title_loop
    316  f151
    317  f151		       85 02		      sta	WSYNC
    318  f153		       85 02		      sta	WSYNC
    319  f155		       85 02		      sta	WSYNC
    320  f157		       a9 00		      lda	#$00
    321  f159		       85 02		      sta	WSYNC
    322  f15b		       85 0f		      sta	PF2
    323  f15d
    324  f15d
      0  f15d					      WAIT_TIMINT
      1  f15d		       2c 85 02    .1	      bit	TIMINT
      2  f160		       10 fb		      bpl	.1
      3  f162		       85 02		      sta	WSYNC
    326  f164
    327  f164
    328  f164				   overscan_start
    329  f164		       a9 02		      lda	#$02
    330  f166		       85 02		      sta	WSYNC
    331  f168		       85 01		      sta	VBLANK
    332  f16a
    333  f16a		       a9 23		      lda	#(30*76)>>6
    334  f16c		       8d 96 02 	      sta	TIM64T
    335  f16f
    336  f16f
      0  f16f					      SPKOUT	temp
      1  f16f
      2  f16f
      3  f16f		       ad 80 02 	      lda	SWCHA
      4  f172		       29 02		      and	#SERIAL_RDYMASK
      5  f174		       f0 29		      beq	.speech_done
      6  f176
      7  f176
      8  f176		       a0 00		      ldy	#$00
      9  f178		       b1 84		      lda	(speech_addr),y
     10  f17a
     11  f17a
     12  f17a		       49 ff		      eor	#$ff
     13  f17c		       f0 21		      beq	.speech_done
     14  f17e		       85 81		      sta	temp
     15  f180
     16  f180
     17  f180		       e6 84		      inc	speech_addr
     18  f182		       d0 02		      bne	.incaddr_skip
     19  f184		       e6 85		      inc	speech_addr+1
     20  f186				   .incaddr_skip
     21  f186
     22  f186
     23  f186
     24  f186		       38		      sec
     25  f187				   .byteout_loop
     26  f187
     27  f187		       ad 81 02 	      lda	SWACNT
     28  f18a		       29 fe		      and	#$fe
     29  f18c		       69 00		      adc	#$00
     30  f18e		       8d 81 02 	      sta	SWACNT
     31  f191
     32  f191
     33  f191		       c0 09		      cpy	#$09
     34  f193		       f0 0a		      beq	.speech_done
     35  f195		       c8		      iny
     36  f196
     37  f196
     38  f196		       a2 07		      ldx	#$07
     39  f198				   .delay_loop
     40  f198		       ca		      dex
     41  f199		       d0 fd		      bne	.delay_loop
     42  f19b
     43  f19b
     44  f19b		       46 81		      lsr	temp
     45  f19d
     46  f19d
     47  f19d		       10 e8		      bpl	.byteout_loop
     48  f19f
     49  f19f				   .speech_done
     50  f19f
     51  f19f				  -	      IF	>.byteout_loop != >.
     52  f19f				  -	      ECHO	"loop X"
     53  f19f				  -	      ERR
     54  f19f					      ENDIF
     55  f19f
     56  f19f
     57  f19f
    338  f19f
    339  f19f
      0  f19f					      WAIT_TIMINT
      1  f19f		       2c 85 02    .1	      bit	TIMINT
      2  f1a2		       10 fb		      bpl	.1
      3  f1a4		       85 02		      sta	WSYNC
    341  f1a6
    342  f1a6		       4c a4 f0 	      jmp	vertical_sync
    343  f1a9
    344  f1a9
    345  f1a9
    346  f1a9							; Subroutines
    347  f1a9
    348  f1a9				   read_switches
    349  f1a9		       a5 82		      lda	switch_states
    350  f1ab		       49 ff		      eor	#$ff
    351  f1ad		       85 83		      sta	switch_edges
    352  f1af
    353  f1af		       ad 82 02 	      lda	SWCHB
    354  f1b2		       09 f4		      ora	#$f4
    355  f1b4		       85 82		      sta	switch_states
    356  f1b6		       ad 80 02 	      lda	SWCHA
    357  f1b9		       09 0f		      ora	#$0f
    358  f1bb		       25 82		      and	switch_states
    359  f1bd		       24 0c		      bit	INPT4
    360  f1bf		       30 02		      bmi	switches_skip
    361  f1c1		       29 fb		      and	#$fb
    362  f1c3				   switches_skip
    363  f1c3		       49 ff		      eor	#$ff
    364  f1c5		       85 82		      sta	switch_states
    365  f1c7		       25 83		      and	switch_edges
    366  f1c9		       85 83		      sta	switch_edges
    367  f1cb							;	  sta COLUBK
    368  f1cb		       60		      rts
    369  f1cc
    370  f1cc
    371  f1cc
    372  f1cc				   speech_select
    373  f1cc		       a5 83		      lda	switch_edges
    374  f1ce		       0a		      asl
    375  f1cf		       b0 59		      bcs	start_rightspeech
    376  f1d1		       0a		      asl
    377  f1d2		       b0 4d		      bcs	start_leftspeech
    378  f1d4		       0a		      asl
    379  f1d5		       b0 41		      bcs	start_downspeech
    380  f1d7		       0a		      asl
    381  f1d8		       b0 35		      bcs	start_upspeech
    382  f1da		       0a		      asl
    383  f1db		       30 29		      bmi	start_firespeech
    384  f1dd		       60		      rts
    385  f1de
    386  f1de
    387  f1de		       00 00 00 00*	      ds	40
    388  f206
    389  f206				   start_firespeech
      0  f206					      SPEAK	fire_speech
      1  f206
      2  f206		       a9 00		      lda	#<fire_speech
      3  f208		       85 84		      sta	speech_addr
      4  f20a		       a9 f0		      lda	#>fire_speech
      5  f20c		       85 85		      sta	speech_addr+1
      6  f20e
    391  f20e		       60		      rts
    392  f20f
    393  f20f				   start_upspeech
      0  f20f					      SPEAK	up_speech
      1  f20f
      2  f20f		       a9 03		      lda	#<up_speech
      3  f211		       85 84		      sta	speech_addr
      4  f213		       a9 f0		      lda	#>up_speech
      5  f215		       85 85		      sta	speech_addr+1
      6  f217
    395  f217		       60		      rts
    396  f218
    397  f218				   start_downspeech
      0  f218					      SPEAK	down_speech
      1  f218
      2  f218		       a9 25		      lda	#<down_speech
      3  f21a		       85 84		      sta	speech_addr
      4  f21c		       a9 f0		      lda	#>down_speech
      5  f21e		       85 85		      sta	speech_addr+1
      6  f220
    399  f220		       60		      rts
    400  f221
    401  f221				   start_leftspeech
      0  f221					      SPEAK	left_speech
      1  f221
      2  f221		       a9 4c		      lda	#<left_speech
      3  f223		       85 84		      sta	speech_addr
      4  f225		       a9 f0		      lda	#>left_speech
      5  f227		       85 85		      sta	speech_addr+1
      6  f229
    403  f229		       60		      rts
    404  f22a
    405  f22a
    406  f22a				   start_rightspeech
      0  f22a					      SPEAK	right_speech
      1  f22a
      2  f22a		       a9 76		      lda	#<right_speech
      3  f22c		       85 84		      sta	speech_addr
      4  f22e		       a9 f0		      lda	#>right_speech
      5  f230		       85 85		      sta	speech_addr+1
      6  f232
    408  f232		       60		      rts
    409  f233
    410  f233
    411  f233
    412  f233
    413  f233
    414  f233							; Sprite Data
    415  f233
    416  f300		       00 00 00 00*	      align	$100
    417  f300
    418  f300				   title_sprite0
    419  f300		       00		      dc.b	%00000000
    420  f301		       00		      dc.b	%00000000
    421  f302		       00		      dc.b	%00000000
    422  f303		       00		      dc.b	%00000000
    423  f304		       00		      dc.b	%00000000
    424  f305		       00		      dc.b	%00000000
    425  f306		       00		      dc.b	%00000000
    426  f307		       00		      dc.b	0
    427  f308		       00		      dc.b	0
    428  f309		       88		      dc.b	%10001000
    429  f30a		       88		      dc.b	%10001000
    430  f30b		       f8		      dc.b	%11111000
    431  f30c		       88		      dc.b	%10001000
    432  f30d		       88		      dc.b	%10001000
    433  f30e		       50		      dc.b	%01010000
    434  f30f		       23		      dc.b	%00100011
    435  f310
    436  f310				   title_sprite1
    437  f310		       02		      dc.b	%00000010
    438  f311		       02		      dc.b	%00000010
    439  f312		       02		      dc.b	%00000010
    440  f313		       02		      dc.b	%00000010
    441  f314		       02		      dc.b	%00000010
    442  f315		       02		      dc.b	%00000010
    443  f316		       0f		      dc.b	%00001111
    444  f317		       00		      dc.b	0
    445  f318		       00		      dc.b	0
    446  f319		       88		      dc.b	%10001000
    447  f31a		       88		      dc.b	%10001000
    448  f31b		       8f		      dc.b	%10001111
    449  f31c		       88		      dc.b	%10001000
    450  f31d		       88		      dc.b	%10001000
    451  f31e		       85		      dc.b	%10000101
    452  f31f		       e2		      dc.b	%11100010
    453  f320
    454  f320				   title_sprite2
    455  f320		       3e		      dc.b	%00111110
    456  f321		       20		      dc.b	%00100000
    457  f322		       20		      dc.b	%00100000
    458  f323		       3c		      dc.b	%00111100
    459  f324		       20		      dc.b	%00100000
    460  f325		       20		      dc.b	%00100000
    461  f326		       be		      dc.b	%10111110
    462  f327		       00		      dc.b	0
    463  f328		       00		      dc.b	0
    464  f329		       a2		      dc.b	%10100010
    465  f32a		       a4		      dc.b	%10100100
    466  f32b		       a8		      dc.b	%10101000
    467  f32c		       bc		      dc.b	%10111100
    468  f32d		       a2		      dc.b	%10100010
    469  f32e		       22		      dc.b	%00100010
    470  f32f		       3c		      dc.b	%00111100
    471  f330
    472  f330				   title_sprite3
    473  f330		       70		      dc.b	%01110000
    474  f331		       88		      dc.b	%10001000
    475  f332		       08		      dc.b	%00001000
    476  f333		       70		      dc.b	%01110000
    477  f334		       80		      dc.b	%10000000
    478  f335		       88		      dc.b	%10001000
    479  f336		       73		      dc.b	%01110011
    480  f337		       00		      dc.b	0
    481  f338		       00		      dc.b	0
    482  f339		       70		      dc.b	%01110000
    483  f33a		       21		      dc.b	%00100001
    484  f33b		       22		      dc.b	%00100010
    485  f33c		       22		      dc.b	%00100010
    486  f33d		       22		      dc.b	%00100010
    487  f33e		       22		      dc.b	%00100010
    488  f33f		       72		      dc.b	%01110010
    489  f340
    490  f340				   title_sprite4
    491  f340		       80		      dc.b	%10000000
    492  f341		       80		      dc.b	%10000000
    493  f342		       80		      dc.b	%10000000
    494  f343		       80		      dc.b	%10000000
    495  f344		       80		      dc.b	%10000000
    496  f345		       80		      dc.b	%10000000
    497  f346		       e0		      dc.b	%11100000
    498  f347		       00		      dc.b	0
    499  f348		       00		      dc.b	0
    500  f349		       87		      dc.b	%10000111
    501  f34a		       48		      dc.b	%01001000
    502  f34b		       28		      dc.b	%00101000
    503  f34c		       28		      dc.b	%00101000
    504  f34d		       28		      dc.b	%00101000
    505  f34e		       28		      dc.b	%00101000
    506  f34f		       27		      dc.b	%00100111
    507  f350
    508  f350				   title_sprite5
    509  f350		       00		      dc.b	%00000000
    510  f351		       00		      dc.b	%00000000
    511  f352		       00		      dc.b	%00000000
    512  f353		       00		      dc.b	%00000000
    513  f354		       00		      dc.b	%00000000
    514  f355		       00		      dc.b	%00000000
    515  f356		       00		      dc.b	%00000000
    516  f357		       00		      dc.b	0
    517  f358		       00		      dc.b	0
    518  f359		       22		      dc.b	%00100010
    519  f35a		       a2		      dc.b	%10100010
    520  f35b		       94		      dc.b	%10010100
    521  f35c		       88		      dc.b	%10001000
    522  f35d		       94		      dc.b	%10010100
    523  f35e		       a2		      dc.b	%10100010
    524  f35f		       22		      dc.b	%00100010
    525  f360
    526  f360
    527  f360
    528  f360
    529  fffa					      org	$fffa
    530  fffa		       91 f0 91 f0*	      dc.w	boot,boot,boot
